// <auto-generated />
using CoinService.DataLayer.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace CoinService.DataLayer.Migrations
{
    [DbContext(typeof(CoinServiceContext))]
    [Migration("20190105141745_Initialize the database and add tickers")]
    partial class Initializethedatabaseandaddtickers
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("CoinService.BusinessLayer.Entities.Tickers.Ticker", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<float>("Ask");

                    b.Property<float>("AskSize");

                    b.Property<float>("Bid");

                    b.Property<float>("BidSize");

                    b.Property<float>("DailyChange");

                    b.Property<float>("DailyChangePerc");

                    b.Property<float>("High");

                    b.Property<float>("LastPrice");

                    b.Property<float>("Low");

                    b.Property<string>("Symbol");

                    b.Property<float>("Volume");

                    b.HasKey("ID");

                    b.ToTable("Tickers");
                });
#pragma warning restore 612, 618
        }
    }
}
